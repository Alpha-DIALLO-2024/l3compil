/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AProgramme extends PProgramme
{
    private PLDecvar _lDecvar_;
    private TSemicol _semicol_;
    private PLDecfonc _lDecfonc_;

    public AProgramme()
    {
        // Constructor
    }

    public AProgramme(
        @SuppressWarnings("hiding") PLDecvar _lDecvar_,
        @SuppressWarnings("hiding") TSemicol _semicol_,
        @SuppressWarnings("hiding") PLDecfonc _lDecfonc_)
    {
        // Constructor
        setLDecvar(_lDecvar_);

        setSemicol(_semicol_);

        setLDecfonc(_lDecfonc_);

    }

    @Override
    public Object clone()
    {
        return new AProgramme(
            cloneNode(this._lDecvar_),
            cloneNode(this._semicol_),
            cloneNode(this._lDecfonc_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProgramme(this);
    }

    public PLDecvar getLDecvar()
    {
        return this._lDecvar_;
    }

    public void setLDecvar(PLDecvar node)
    {
        if(this._lDecvar_ != null)
        {
            this._lDecvar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lDecvar_ = node;
    }

    public TSemicol getSemicol()
    {
        return this._semicol_;
    }

    public void setSemicol(TSemicol node)
    {
        if(this._semicol_ != null)
        {
            this._semicol_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semicol_ = node;
    }

    public PLDecfonc getLDecfonc()
    {
        return this._lDecfonc_;
    }

    public void setLDecfonc(PLDecfonc node)
    {
        if(this._lDecfonc_ != null)
        {
            this._lDecfonc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lDecfonc_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lDecvar_)
            + toString(this._semicol_)
            + toString(this._lDecfonc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lDecvar_ == child)
        {
            this._lDecvar_ = null;
            return;
        }

        if(this._semicol_ == child)
        {
            this._semicol_ = null;
            return;
        }

        if(this._lDecfonc_ == child)
        {
            this._lDecfonc_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lDecvar_ == oldChild)
        {
            setLDecvar((PLDecvar) newChild);
            return;
        }

        if(this._semicol_ == oldChild)
        {
            setSemicol((TSemicol) newChild);
            return;
        }

        if(this._lDecfonc_ == oldChild)
        {
            setLDecfonc((PLDecfonc) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
